unit CleKrxQuoteParser;

interface

uses Classes, SysUtils, Windows, Dialogs,

    // lemon:
  CleQuoteBroker, CleSymbols, CleQuoteParserIF,
    // Lemon: utilities
  CleParsers,  GleConsts,  UUdpPacket,
  CleKrxSymbols,
  CleFQn,
    //
  CleQuoteParserPv0, CleQuoteParserPv1, CleQuoteParserPv2
  ;

const
  MARKET_DEPTH_SIZE = 5;
  
type
  TKRXQuoteParser = class
  private
    FQuoteDate: TDateTime; // assigned
    FQuoteBroker: TQuoteBroker; // assigned
    FQuoteParser: TIFQuoteParser; // created
    FParseCount: Integer;
    procedure SetQuoteBroker(const Value: TQuoteBroker);

  public
    constructor Create;
    destructor Destroy; override;

    procedure Parse( stData : string );

    property QuoteDate: TDateTime read FQuoteDate write FQuoteDate;
    property QuoteBroker: TQuoteBroker read FQuoteBroker write SetQuoteBroker;
    property QuoteParser: TIFQuoteParser read FQuoteParser write FQuoteParser;
    property ParseCount : Integer read FParseCount;
  end;

implementation

uses GleTypes, GAppEnv, GleLib, CleQuoteTimers;

//-----------------------------------------------------------------<init>

constructor TKRXQuoteParser.Create;

begin

    // init
  FQuoteDate := GetQuoteDate;
  FQuoteBroker := nil;
  FParseCount := 0;

  if gEnv.PacketVer = pv1 then
    FQuoteParser  := TQuoteParserPv1.Create    // 차세대 파싱
  else if gEnv.PacketVer = pv0 then
    FQuoteParser  := TQuoteParserPv0.Create   // 차세대 이전 파싱..
  else if gEnv.PacketVer = pv2 then
    FQuoteParser  := TQuoteParserPv2.Create;   // 2014. 3. 3 변경

end;

destructor TKRXQuoteParser.Destroy;
begin
  FQuoteParser.Free;
  inherited;
end;


procedure TKRXQuoteParser.Parse(stData: string);
begin
  FQuoteParser.Parse( stData );
end;

procedure TKRXQuoteParser.SetQuoteBroker(const Value: TQuoteBroker);
begin
  FQuoteParser.QuoteBroker  := Value;
  //FQuoteBroker := Value;
end;

end.



